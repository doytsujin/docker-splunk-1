version: 2.1

executors:
  circleci:
    machine:
      image: circleci/classic:latest

orbs:
  clair: ovotech/clair-scanner@1.6.0

jobs:
  build_images:
    executor: circleci
    steps:
      - checkout
      - run: 
          name: Setup workspace
          command: mkdir -p workspace_cache
      - run:
          name: Build images
          command: make all
      - run:
          name: Save images
          command: |
            docker save splunk-redhat-8:latest | gzip > splunk-redhat-8.tgz
            docker save uf-redhat-8:latest | gzip > uf-redhat-8.tgz
            docker save splunk-debian-9:latest | gzip > splunk-debian-9.tgz
            docker save uf-debian-9:latest | gzip > uf-debian-9.tgz
      - persist_to_workspace:
          root: workspace_cache
          paths:
            - splunk-redhat-8.tgz
            - uf-redhat-8.tgz
            - splunk-debian-9.tgz
            - uf-debian-9.tgz

  scan_images:
    executor: clair/default
    steps:
      - attach_workspace:
          at: workspace_cache
      - clair/scan:
          docker_tar_dir: ~/project/workspace_cache/

  debian10-testing:
    machine:
      image: circleci/classic:latest
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Setup python3
          command: |
            pyenv global 2.7.12 3.5.2
            python --version
            pip --version
            python3 --version
            pip3 --version
      - run:
          name: Setup Tests / Scanner Requirements
          command: |
            make test_setup
      - run:
          name: Build Debian 10 Splunk
          command: |
            make splunk-debian-10
      - run:
          name: Build Debian 10 UF
          command: |
            make uf-debian-10
      - run:
          name: Test if image size increase
          command: make test_debian10_image_size
      - run:
          name: Run small Debian 10 image tests
          command: make run_small_tests_debian10
          no_output_timeout: 20m
      - run:
          name: Run large Debian 10 image tests
          command: make run_large_tests_debian10
          no_output_timeout: 1h
      - store_artifacts:
          path: test-results
          destination: test-results
      - store_test_results:
          path: test-results
  redhat8-testing:
    machine:
      image: circleci/classic:latest
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Setup python3
          command: |
            pyenv global 2.7.12 3.5.2
            python --version
            pip --version
            python3 --version
            pip3 --version
      - run:
          name: Setup Tests / Scanner Requirements
          command: |
            make test_setup
      - run:
          name: Build Redhat 8 Splunk
          command: |
            make splunk-redhat-8
      - run:
          name: Build Redhat 8 UF
          command: |
            make uf-redhat-8
      - run:
          name: Run small Redhat 8 image tests
          command: make run_small_tests_redhat8
          no_output_timeout: 20m
      - run:
          name: Run large Redhat 8 image tests
          command: make run_large_tests_redhat8
          no_output_timeout: 1h
      - store_artifacts:
          path: test-results
          destination: test-results
      - store_test_results:
          path: test-results
  container-validation:
    machine:
      image: circleci/classic:latest
    steps:
      - checkout
      - run:
          name: Setup python3
          command: |
            pyenv global 2.7.12 3.5.2
            python --version
            pip --version
            python3 --version
            pip3 --version
      - run:
          name: Setup Tests / Scanner Requirements
          command: |
            make test_setup
      - run:
          name: Build Container
          command: |
            make all
      - run:
          name: Export Build Images for Artifacts
          command: |
            make save_containers
      - run:
          name: Test Python3 installation
          command: make test_python3_all
      - run:
          name: Test Python2 as the default
          command: make test_python2_all
      - store_artifacts:
          path: test-results
          destination: test-results

workflows:
  version: 2
  docker-splunk-pipeline:
    jobs:
      - build_images
      - scan_images:
          requires:
            - build_images
